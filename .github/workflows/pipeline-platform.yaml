# This is a basic workflow to help you get started with Actions
name: Pipeline-Platform
# Controls when the action will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths: 
#    - Azure/**
    - .github/workflows/pipeline-platform.yaml
  # Allows you to run this workflow manually from the Actions tab.
  workflow_dispatch:
# Env to set reusable variables
env:
  RGNAME: Operator-QA-ResourceGroup
  ACRNAME: OperatorQAContainerRegistry
  AKSNAME:  ${{ secrets.AKSNAME }}
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single  job called Platform to create the AKS Cluster
  Platform:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Git checkout
        uses: actions/checkout@v2

      - name: az CLI login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      #- name: Az RG Create
      #  run: az group create --name $RGNAME -l westus
      - name: AZ AKS Create
        run: az aks create -n $AKSNAME -g $RGNAME --generate-ssh-keys -l westus --service-principal ${{ secrets.clientId }} --client-secret ${{ secrets.clientSecret }}
      # Manually Create a Service Principal and configure Github Actions to use sp to connect to Subscription.
      #- name: Az ACR Create
      #  run: az acr create -n $ACRNAME -g $RGNAME -l westus --sku Basic
      - name: Az ACR attach to AKS
        run: az aks update -n $AKSNAME -g $RGNAME --attach-acr $ACRNAME
